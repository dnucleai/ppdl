# Generated by the protocol buffer compiler.  DO NOT EDIT!
# source: nucleai.proto

import sys
_b=sys.version_info[0]<3 and (lambda x:x) or (lambda x:x.encode('latin1'))
from google.protobuf import descriptor as _descriptor
from google.protobuf import message as _message
from google.protobuf import reflection as _reflection
from google.protobuf import symbol_database as _symbol_database
from google.protobuf import descriptor_pb2
# @@protoc_insertion_point(imports)

_sym_db = _symbol_database.Default()




DESCRIPTOR = _descriptor.FileDescriptor(
  name='nucleai.proto',
  package='nucleai',
  syntax='proto3',
  serialized_pb=_b('\n\rnucleai.proto\x12\x07nucleai\"\x06\n\x04Void\"\x1f\n\x05\x45vent\x12\x16\n\x0esecondsFromNow\x18\x01 \x01(\x05\"\x17\n\x08\x43lientId\x12\x0b\n\x03txt\x18\x01 \x01(\t\"\x16\n\x07\x43ycleId\x12\x0b\n\x03num\x18\x01 \x01(\x03\",\n\x0cIndexedValue\x12\r\n\x05index\x18\x01 \x01(\x05\x12\r\n\x05value\x18\x02 \x01(\x01\"7\n\nParameters\x12)\n\nparameters\x18\x01 \x03(\x0b\x32\x15.nucleai.IndexedValue\"6\n\x0f\x44ownloadRequest\x12#\n\x08\x63lientId\x18\x01 \x01(\x0b\x32\x11.nucleai.ClientId\"\x80\x01\n\x10\x44ownloadResponse\x12!\n\x07\x63ycleId\x18\x01 \x01(\x0b\x32\x10.nucleai.CycleId\x12 \n\x08waitTime\x18\x02 \x01(\x0b\x32\x0e.nucleai.Event\x12\'\n\nparameters\x18\x03 \x01(\x0b\x32\x13.nucleai.Parameters\"|\n\rUploadRequest\x12!\n\x07\x63ycleId\x18\x01 \x01(\x0b\x32\x10.nucleai.CycleId\x12#\n\x08\x63lientId\x18\x02 \x01(\x0b\x32\x11.nucleai.ClientId\x12#\n\x06\x64\x65ltas\x18\x03 \x01(\x0b\x32\x13.nucleai.Parameters\"\x10\n\x0eUploadResponse2\x8a\x01\n\x08Learning\x12\x41\n\x08\x44ownload\x12\x18.nucleai.DownloadRequest\x1a\x19.nucleai.DownloadResponse\"\x00\x12;\n\x06Upload\x12\x16.nucleai.UploadRequest\x1a\x17.nucleai.UploadResponse\"\x00\x62\x06proto3')
)




_VOID = _descriptor.Descriptor(
  name='Void',
  full_name='nucleai.Void',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=26,
  serialized_end=32,
)


_EVENT = _descriptor.Descriptor(
  name='Event',
  full_name='nucleai.Event',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='secondsFromNow', full_name='nucleai.Event.secondsFromNow', index=0,
      number=1, type=5, cpp_type=1, label=1,
      has_default_value=False, default_value=0,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None, file=DESCRIPTOR),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=34,
  serialized_end=65,
)


_CLIENTID = _descriptor.Descriptor(
  name='ClientId',
  full_name='nucleai.ClientId',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='txt', full_name='nucleai.ClientId.txt', index=0,
      number=1, type=9, cpp_type=9, label=1,
      has_default_value=False, default_value=_b("").decode('utf-8'),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None, file=DESCRIPTOR),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=67,
  serialized_end=90,
)


_CYCLEID = _descriptor.Descriptor(
  name='CycleId',
  full_name='nucleai.CycleId',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='num', full_name='nucleai.CycleId.num', index=0,
      number=1, type=3, cpp_type=2, label=1,
      has_default_value=False, default_value=0,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None, file=DESCRIPTOR),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=92,
  serialized_end=114,
)


_INDEXEDVALUE = _descriptor.Descriptor(
  name='IndexedValue',
  full_name='nucleai.IndexedValue',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='index', full_name='nucleai.IndexedValue.index', index=0,
      number=1, type=5, cpp_type=1, label=1,
      has_default_value=False, default_value=0,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None, file=DESCRIPTOR),
    _descriptor.FieldDescriptor(
      name='value', full_name='nucleai.IndexedValue.value', index=1,
      number=2, type=1, cpp_type=5, label=1,
      has_default_value=False, default_value=float(0),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None, file=DESCRIPTOR),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=116,
  serialized_end=160,
)


_PARAMETERS = _descriptor.Descriptor(
  name='Parameters',
  full_name='nucleai.Parameters',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='parameters', full_name='nucleai.Parameters.parameters', index=0,
      number=1, type=11, cpp_type=10, label=3,
      has_default_value=False, default_value=[],
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None, file=DESCRIPTOR),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=162,
  serialized_end=217,
)


_DOWNLOADREQUEST = _descriptor.Descriptor(
  name='DownloadRequest',
  full_name='nucleai.DownloadRequest',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='clientId', full_name='nucleai.DownloadRequest.clientId', index=0,
      number=1, type=11, cpp_type=10, label=1,
      has_default_value=False, default_value=None,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None, file=DESCRIPTOR),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=219,
  serialized_end=273,
)


_DOWNLOADRESPONSE = _descriptor.Descriptor(
  name='DownloadResponse',
  full_name='nucleai.DownloadResponse',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='cycleId', full_name='nucleai.DownloadResponse.cycleId', index=0,
      number=1, type=11, cpp_type=10, label=1,
      has_default_value=False, default_value=None,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None, file=DESCRIPTOR),
    _descriptor.FieldDescriptor(
      name='waitTime', full_name='nucleai.DownloadResponse.waitTime', index=1,
      number=2, type=11, cpp_type=10, label=1,
      has_default_value=False, default_value=None,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None, file=DESCRIPTOR),
    _descriptor.FieldDescriptor(
      name='parameters', full_name='nucleai.DownloadResponse.parameters', index=2,
      number=3, type=11, cpp_type=10, label=1,
      has_default_value=False, default_value=None,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None, file=DESCRIPTOR),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=276,
  serialized_end=404,
)


_UPLOADREQUEST = _descriptor.Descriptor(
  name='UploadRequest',
  full_name='nucleai.UploadRequest',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='cycleId', full_name='nucleai.UploadRequest.cycleId', index=0,
      number=1, type=11, cpp_type=10, label=1,
      has_default_value=False, default_value=None,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None, file=DESCRIPTOR),
    _descriptor.FieldDescriptor(
      name='clientId', full_name='nucleai.UploadRequest.clientId', index=1,
      number=2, type=11, cpp_type=10, label=1,
      has_default_value=False, default_value=None,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None, file=DESCRIPTOR),
    _descriptor.FieldDescriptor(
      name='deltas', full_name='nucleai.UploadRequest.deltas', index=2,
      number=3, type=11, cpp_type=10, label=1,
      has_default_value=False, default_value=None,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None, file=DESCRIPTOR),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=406,
  serialized_end=530,
)


_UPLOADRESPONSE = _descriptor.Descriptor(
  name='UploadResponse',
  full_name='nucleai.UploadResponse',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=532,
  serialized_end=548,
)

_PARAMETERS.fields_by_name['parameters'].message_type = _INDEXEDVALUE
_DOWNLOADREQUEST.fields_by_name['clientId'].message_type = _CLIENTID
_DOWNLOADRESPONSE.fields_by_name['cycleId'].message_type = _CYCLEID
_DOWNLOADRESPONSE.fields_by_name['waitTime'].message_type = _EVENT
_DOWNLOADRESPONSE.fields_by_name['parameters'].message_type = _PARAMETERS
_UPLOADREQUEST.fields_by_name['cycleId'].message_type = _CYCLEID
_UPLOADREQUEST.fields_by_name['clientId'].message_type = _CLIENTID
_UPLOADREQUEST.fields_by_name['deltas'].message_type = _PARAMETERS
DESCRIPTOR.message_types_by_name['Void'] = _VOID
DESCRIPTOR.message_types_by_name['Event'] = _EVENT
DESCRIPTOR.message_types_by_name['ClientId'] = _CLIENTID
DESCRIPTOR.message_types_by_name['CycleId'] = _CYCLEID
DESCRIPTOR.message_types_by_name['IndexedValue'] = _INDEXEDVALUE
DESCRIPTOR.message_types_by_name['Parameters'] = _PARAMETERS
DESCRIPTOR.message_types_by_name['DownloadRequest'] = _DOWNLOADREQUEST
DESCRIPTOR.message_types_by_name['DownloadResponse'] = _DOWNLOADRESPONSE
DESCRIPTOR.message_types_by_name['UploadRequest'] = _UPLOADREQUEST
DESCRIPTOR.message_types_by_name['UploadResponse'] = _UPLOADRESPONSE
_sym_db.RegisterFileDescriptor(DESCRIPTOR)

Void = _reflection.GeneratedProtocolMessageType('Void', (_message.Message,), dict(
  DESCRIPTOR = _VOID,
  __module__ = 'nucleai_pb2'
  # @@protoc_insertion_point(class_scope:nucleai.Void)
  ))
_sym_db.RegisterMessage(Void)

Event = _reflection.GeneratedProtocolMessageType('Event', (_message.Message,), dict(
  DESCRIPTOR = _EVENT,
  __module__ = 'nucleai_pb2'
  # @@protoc_insertion_point(class_scope:nucleai.Event)
  ))
_sym_db.RegisterMessage(Event)

ClientId = _reflection.GeneratedProtocolMessageType('ClientId', (_message.Message,), dict(
  DESCRIPTOR = _CLIENTID,
  __module__ = 'nucleai_pb2'
  # @@protoc_insertion_point(class_scope:nucleai.ClientId)
  ))
_sym_db.RegisterMessage(ClientId)

CycleId = _reflection.GeneratedProtocolMessageType('CycleId', (_message.Message,), dict(
  DESCRIPTOR = _CYCLEID,
  __module__ = 'nucleai_pb2'
  # @@protoc_insertion_point(class_scope:nucleai.CycleId)
  ))
_sym_db.RegisterMessage(CycleId)

IndexedValue = _reflection.GeneratedProtocolMessageType('IndexedValue', (_message.Message,), dict(
  DESCRIPTOR = _INDEXEDVALUE,
  __module__ = 'nucleai_pb2'
  # @@protoc_insertion_point(class_scope:nucleai.IndexedValue)
  ))
_sym_db.RegisterMessage(IndexedValue)

Parameters = _reflection.GeneratedProtocolMessageType('Parameters', (_message.Message,), dict(
  DESCRIPTOR = _PARAMETERS,
  __module__ = 'nucleai_pb2'
  # @@protoc_insertion_point(class_scope:nucleai.Parameters)
  ))
_sym_db.RegisterMessage(Parameters)

DownloadRequest = _reflection.GeneratedProtocolMessageType('DownloadRequest', (_message.Message,), dict(
  DESCRIPTOR = _DOWNLOADREQUEST,
  __module__ = 'nucleai_pb2'
  # @@protoc_insertion_point(class_scope:nucleai.DownloadRequest)
  ))
_sym_db.RegisterMessage(DownloadRequest)

DownloadResponse = _reflection.GeneratedProtocolMessageType('DownloadResponse', (_message.Message,), dict(
  DESCRIPTOR = _DOWNLOADRESPONSE,
  __module__ = 'nucleai_pb2'
  # @@protoc_insertion_point(class_scope:nucleai.DownloadResponse)
  ))
_sym_db.RegisterMessage(DownloadResponse)

UploadRequest = _reflection.GeneratedProtocolMessageType('UploadRequest', (_message.Message,), dict(
  DESCRIPTOR = _UPLOADREQUEST,
  __module__ = 'nucleai_pb2'
  # @@protoc_insertion_point(class_scope:nucleai.UploadRequest)
  ))
_sym_db.RegisterMessage(UploadRequest)

UploadResponse = _reflection.GeneratedProtocolMessageType('UploadResponse', (_message.Message,), dict(
  DESCRIPTOR = _UPLOADRESPONSE,
  __module__ = 'nucleai_pb2'
  # @@protoc_insertion_point(class_scope:nucleai.UploadResponse)
  ))
_sym_db.RegisterMessage(UploadResponse)



_LEARNING = _descriptor.ServiceDescriptor(
  name='Learning',
  full_name='nucleai.Learning',
  file=DESCRIPTOR,
  index=0,
  options=None,
  serialized_start=551,
  serialized_end=689,
  methods=[
  _descriptor.MethodDescriptor(
    name='Download',
    full_name='nucleai.Learning.Download',
    index=0,
    containing_service=None,
    input_type=_DOWNLOADREQUEST,
    output_type=_DOWNLOADRESPONSE,
    options=None,
  ),
  _descriptor.MethodDescriptor(
    name='Upload',
    full_name='nucleai.Learning.Upload',
    index=1,
    containing_service=None,
    input_type=_UPLOADREQUEST,
    output_type=_UPLOADRESPONSE,
    options=None,
  ),
])
_sym_db.RegisterServiceDescriptor(_LEARNING)

DESCRIPTOR.services_by_name['Learning'] = _LEARNING

# @@protoc_insertion_point(module_scope)
